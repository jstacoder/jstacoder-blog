{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/wrapper.jsx","webpack:///./.docz/app/components/Link.js","webpack:///./.docz/app/components/Seo.js","webpack:///./.docz/app/components/Layout.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","a","StaticQueryContext","React","StaticQueryDataRenderer","_ref","staticQueryData","data","query","render","finalData","createElement","Fragment","props","children","Consumer","PropTypes","object","isRequired","func","m","module","require","default","Wrapper","react_default","components_dist_index_esm","height","Link","gatsby_browser_entry","Object","assign","getProps","isCurrent","objectWithoutPropertiesLoose_default","className","SEO","description","lang","meta","keywords","title","detailsQuery","db","JSON","metaDescription","Helmet_default","htmlAttributes","titleTemplate","name","content","property","concat","length","_3926075811","string","array","Seo","Route","components","useComponents","NotFound","entry","index_es","index_esm","asyncComponent","react","Layout","_ref2","defaultProps","ctx","pageContext","err","parseDatabase","_3369473780","entries","find","filepath","dist_index_esm","linkComponent","Link_Link","wrapper","Layout_Route","color","ProdPageRenderer","location","pageResources","react__WEBPACK_IMPORTED_MODULE_1___default","_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default","json","prop_types__WEBPACK_IMPORTED_MODULE_2___default","shape","pathname"],"mappings":"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","file":"2-232b131767b8184f84fa.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from 'react'\nimport { Box } from '@primer/components'\n\n\nconst Wrapper = ({children}) =>(\n <Box height={'100%'}>\n   {children}\n </Box>\n)\n\nexport default Wrapper","import React from 'react'\nimport { Link as BaseLink } from 'gatsby'\n\nexport const Link = props => (\n  <BaseLink\n    {...props}\n    getProps={({ isCurrent, ...customProps }) =>\n      isCurrent ? { className: `${props.className} active` } : null\n    }\n  />\n)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const db = JSON.parse(data.doczDb.db)\n        const metaDescription = description || db.config.title\n\n        return (\n          <Helmet\n            htmlAttributes={{ lang }}\n            title={title}\n            titleTemplate={`%s | ${db.config.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    doczDb {\n      id\n      db\n    }\n  }\n`\n","import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport { AsyncRoute, useComponents } from 'docz'\nimport { MDXProvider } from '@mdx-js/react'\n\nimport Theme from 'docz-theme-default'\nimport Wrapper from 'src/wrapper'\n\nimport { Link } from './Link'\nimport SEO from './Seo'\n\nconst query = graphql`\n  query Layout {\n    doczDb {\n      id\n      db\n    }\n  }\n`\n\nconst Route = ({ children, ...props }) => {\n  const components = useComponents()\n  const NotFound = components.NotFound\n  if (!props.entry) return <NotFound />\n\n  return (\n    <MDXProvider components={components}>\n      <AsyncRoute\n        {...props}\n        asyncComponent={() => <Fragment>{children}</Fragment>}\n      />\n    </MDXProvider>\n  )\n}\n\nconst parseDatabase = data => {\n  try {\n    return JSON.parse(data.doczDb.db)\n  } catch (err) {\n    return {}\n  }\n}\n\nconst Layout = ({ children, ...defaultProps }) => {\n  const { pageContext: ctx } = defaultProps\n  const data = useStaticQuery(query)\n  const db = parseDatabase(data)\n  const entry =\n    db.entries && db.entries.find(entry => entry.filepath === ctx.filepath)\n\n  return (\n    <Fragment>\n      {entry && <SEO title={entry.value.name} />}\n      <Theme db={db} linkComponent={Link} wrapper={Wrapper}>\n        <Route {...defaultProps} entry={entry}>\n          {children}\n        </Route>\n      </Theme>\n    </Fragment>\n  )\n}\n\nLayout.propTypes = {\n  color: PropTypes.string,\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}