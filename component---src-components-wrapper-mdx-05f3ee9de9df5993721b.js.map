{"version":3,"sources":["webpack:///./src/components/dynamic-flex-wrapper.jsx","webpack:///./src/components/wrapper.mdx"],"names":["selectedComponentReducer","state","_temp","_results","_ref","type","value","results","component","objectSpread_default","selected","_ref2","_objectSpread2","key","val","DynamicComponentWrapper","_ref4","Component","props","objectWithoutPropertiesLoose_default","_useReducer","useReducer","_useState","useState","flexDirection","setFlexDirection","_useState2","flexDirectionInput","setFlexDirectionInput","onSubmit","e","preventDefault","react_default","a","createElement","map","choice","index_esm","onClick","changeFlexDirection","Object","assign","MyComp","p","Wrapper","dynamic_flex_wrapper_DynamicComponentWrapper","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","index_es","mdxType","dynamic_flex_wrapper_Wrapper","isMDXComponent"],"mappings":"4LASMA,EAA2B,SAACC,EAADC,GAA8B,IAAAC,EAAAC,OAAA,IAAAF,EAAN,GAAMA,EAArBG,EAAqBD,EAArBC,KAAMC,EAAeF,EAAfE,MACxCC,IAAOJ,EAAA,2BACe,SAACK,GAAD,OAAAC,IAAA,GAAoBR,EAApB,CAA2BS,SAAUF,KADpDL,EAAA,uBAEe,SAAAQ,GAAA,IAAAC,EAAEC,EAAFF,EAAEE,IAAKC,EAAPH,EAAOG,IAAP,OAAAL,IAAA,GACrBR,EADqB,CAExBS,SAAQD,IAAA,GACHR,EAAMS,UADHE,EAAA,GAAAA,EAELC,GAAMC,EAFDF,OAJCT,GAUb,OAAGE,KAAQE,EACFA,EAAQF,GAAMC,GAEhBL,GAcHc,EAA0B,SAAAC,GAA0B,IAAxBC,EAAwBD,EAAxBC,UAAcC,EAAUC,IAAAH,EAAA,eAAAI,EAC3BC,qBAAWrB,EAA0B,CAACU,SAAUO,IADrBK,GAAAF,EAAA,GAAAA,EAAA,GAGdG,mBAAS,QAA5CC,EAHiDF,EAAA,GAGlCG,EAHkCH,EAAA,GAAAI,EAIJH,mBAASC,GAAtDG,EAJiDD,EAAA,GAI7BE,EAJ6BF,EAAA,GAWlDG,EAAW,SAAAC,GACfA,GAAKA,EAAEC,iBACPN,EAAiBE,GACjBC,EAAsB,KAaxB,OACCI,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAML,SAAUA,GACbL,EACDQ,EAAAC,EAAAC,cAAA,+BAxBwB,CAAC,MAAO,cAAc,SAAU,kBAyBlCC,IAAI,SAAAC,GAAM,OAC/BJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAexB,IAAKuB,EAAQE,QAAS,kBAXf,SAAAF,GAC1BR,EAAsBQ,GACtBP,IAS6CU,CAAoBH,KAAUA,MAG1EJ,EAAAC,EAAAC,cAACjB,EAADuB,OAAAC,OAAA,GAAevB,EAAf,CAAsBM,cAAeA,OAKpCkB,EAAS,SAAAxB,GACb,OACCc,EAAAC,EAAAC,cAACG,EAAA,EAASnB,EACRc,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAWM,EAAG,GACZX,EAAAC,EAAAC,cAAA,gBAEFF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAWM,EAAG,GACZX,EAAAC,EAAAC,cAAA,gBAEFF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAWM,EAAG,GACZX,EAAAC,EAAAC,cAAA,gBAEFF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAWM,EAAG,GACZX,EAAAC,EAAAC,cAAA,kBAMMU,EAAU,SAAA1B,GAErB,OAAOc,EAAAC,EAAAC,cAACW,EAADL,OAAAC,OAAA,CAAyBxB,UAAWyB,GAAYxB,4RC5FlD,IAAM4B,EAAe,iMAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT9C,GAGZ,IAFD+C,EAEC/C,EAFD+C,WACGjC,EACFC,IAAAf,EAAA,gBACD,OAAOoC,OAAAY,EAAA,EAAAZ,CAACQ,EAADR,OAAAC,OAAA,GAAeM,EAAiB7B,EAAhC,CAAuCiC,WAAYA,EAAYE,QAAQ,cAI5Eb,OAAAY,EAAA,EAAAZ,CAACc,EAAD,CAASD,QAAQ,6LAIrBH,EAAWK,gBAAiB","file":"component---src-components-wrapper-mdx-05f3ee9de9df5993721b.js","sourcesContent":["import React, { useState, useReducer } from 'react'\nimport { Flex, BorderBox, ButtonOutline } from '@primer/components'\n\nconst SET_SELECTED_COMPONENT = 'set_selected_component'\nconst SET_VALUE_ON_COMPONENT = 'set_value_on_component'\nconst ADD_COMPONENT = 'add_component'\nconst REMOVE_COMPONENT = 'remove_component'\n\n\nconst selectedComponentReducer = (state, {type, value} = {}) =>{\n  const results = {\n    [SET_SELECTED_COMPONENT]: (component) => ({...state, selected: component}),\n    [SET_VALUE_ON_COMPONENT]: ({key, val}) =>({\n      ...state,\n      selected:{\n        ...state.selected,\n        [key]: val\n      }\n    })\n  }\n  if(type in results){\n    return results[type](value)\n  }\n  return state\n}\n\nconst componentsReducer = (state, {type, value} = {}) =>{\n  const results = {\n    [ADD_COMPONENT]: component=> ([...state, component]),\n    [REMOVE_COMPONENT]: component=> state.filter(comp => comp !== component)\n  }\n  if(type in results){\n    return results[type](value)\n  }\n  return state\n}\n\nconst DynamicComponentWrapper = ({Component, ...props}) =>{\n  const [selected, dispatch] = useReducer(selectedComponentReducer, {selected: Component})\n  \n  const [flexDirection, setFlexDirection] = useState('row')\n  const [flexDirectionInput, setFlexDirectionInput] = useState(flexDirection)\n  \n  \n  const flexDirectionChoices = ['row', 'row-reverse','column', 'column-reverse']\n  \n  \n  \n  const onSubmit = e =>{\n    e && e.preventDefault()\n    setFlexDirection(flexDirectionInput)\n    setFlexDirectionInput('')\n  }\n  \n  const onChange = e =>{\n    e.preventDefault()\n    setFlexDirectionInput(e.target.value)\n  }\n  \n  const changeFlexDirection = choice =>{\n    setFlexDirectionInput(choice)\n    onSubmit()\n  }\n  \n  return (\n   <div>\n     <form onSubmit={onSubmit}>\n       {flexDirection}\n       <label>Flex direction</label>\n       {flexDirectionChoices.map(choice=>(\n        <ButtonOutline key={choice} onClick={()=>changeFlexDirection(choice)}>{choice}</ButtonOutline>\n       ))}\n     </form>\n     <Component {...props} flexDirection={flexDirection}/>\n   </div>\n   )\n}\n\nconst MyComp = props =>{\n  return (\n   <Flex {...props}>\n     <BorderBox p={2}>\n       <p>hi</p>\n     </BorderBox>\n     <BorderBox p={2}>\n       <p>hi</p>\n     </BorderBox>\n     <BorderBox p={2}>\n       <p>hi</p>\n     </BorderBox>\n     <BorderBox p={2}>\n       <p>hi</p>\n     </BorderBox>\n   </Flex>\n  )\n}\n\nexport const Wrapper = props =>{\n  \n  return <DynamicComponentWrapper Component={MyComp} {...props} />\n}\n","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/kyle/git/docz/.docz/app/components/Layout.js\";\nimport { Wrapper } from './dynamic-flex-wrapper';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <Wrapper mdxType=\"Wrapper\" />\n\n    </MDXLayout>;\n}\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}